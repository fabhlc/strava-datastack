import{c as h,d as v,i as f,v as n,h as u}from"../../../../chunks/ssr.js";import"dequal";import"../../../../chunks/VennDiagram.svelte_svelte_type_style_lang.js";import"clsx";import"../../../../chunks/stores.js";import"@uwdata/mosaic-sql";import"@evidence-dev/universal-sql/client-duckdb";import"ssf";import"@tidyjs/tidy";import"deep-object-diff";import"chroma-js";import{i as I,b as g}from"../../../../chunks/utils.js";import{I as p}from"../../../../chunks/Icon.js";import{A as E,j as y,k as C,_ as S,l as j,T as A}from"../../../../chunks/index6.js";import{c as x}from"../../../../chunks/utils2.js";import"export-to-csv";import"echarts";import"yaml";import"@astronautlabs/jsonpath";import"tua-body-scroll-lock";import"lodash/merge.js";import"prismjs";import"debounce";import"downloadjs";import"echarts-stat";const N=h((s,t,e,b)=>{let{columns:o=[]}=t,{rowClass:l=""}=t,{class:r=""}=t;const c=a=>{switch(a.toUpperCase()){case"INT":case"INTEGER":case"BIGINT":case"SMALLINT":case"TINYINT":case"DOUBLE":return S;case"DATE":case"DATETIME":case"TIMESTAMP":return C;case"BOOLEAN":return y;default:return E}};return t.columns===void 0&&e.columns&&o!==void 0&&e.columns(o),t.rowClass===void 0&&e.rowClass&&l!==void 0&&e.rowClass(l),t.class===void 0&&e.class&&r!==void 0&&e.class(r),`<ul${v("class",x("list-none m-0 flex flex-col gap-1",r),0)}>${f(o,a=>{let i=a.data_type??a.column_type;return` <li${v("class",x("font-mono text-sm rounded flex flex-row hover:bg-base-200 max-w-full",l),0)}><div class="grid grid-cols-[auto,auto,1fr] gap-2 px-2 py-1 w-full lowercase truncate">${n(p,"Icon").$$render(s,{src:c(i),class:"text-base-content-muted w-5 h-5"},{},{})} ${u(i)} <b class="lowercase truncate">${u(a.column_name)}</b></div> </li>`})}</ul>`}),_=h((s,t,e,b)=>{let{data:o}=t;async function l(){return{}}let r="",c="";return t.data===void 0&&e.data&&o!==void 0&&e.data(o),`${function(a){return I(a)?(a.then(null,g),`
	Loading Schema Information...
`):function(i){return` <section><div><ul class="list-none m-0 p-0 flex flex-col gap-1 mb-1">${f(Object.entries(i),([m,w])=>`<li class="font-mono m-0 text-sm"><button class="${["bg-base-200 px-2 py-1 rounded font-bold flex w-full hover:bg-base-300 hover:text-base-content",(c===m?"bg-info":"")+" "+(c===m?"text-info-content":"")].join(" ").trim()}">${n(p,"Icon").$$render(s,{src:j,class:"w-5 h-5 mr-1"},{},{})} ${u(m)} </button></li> ${c===m?`<ul class="list-none m-0 flex flex-col gap-1">${f(Object.entries(w),([T,d])=>`<li class="font-mono m-0 text-sm font-bold ml-3"><button class="${["bg-base-200 px-2 py-1 rounded flex w-full hover:bg-base-300 hover:text-base-content",(r===d?"bg-info":"")+" "+(r===d?"text-info-content":"")].join(" ").trim()}">${n(p,"Icon").$$render(s,{src:A,class:"w-5 h-5 mr-1"},{},{})} ${u(T)} </button></li> ${r===d?`${n(N,"TableView").$$render(s,{columns:d.columns,rowClass:"ml-6 "},{},{})}`:""}`)} </ul>`:""}`)}</ul></div></section> `}(a)}(l())}`}),ot=h((s,t,e,b)=>{let{data:o}=t;return t.data===void 0&&e.data&&o!==void 0&&e.data(o),`<h1 class="markdown" data-svelte-h="svelte-15777oi">Project Schema</h1> <p class="markdown" data-svelte-h="svelte-ak948l">This page details the tables and columns that are currently loaded in your project.</p> <h2 class="markdown" data-svelte-h="svelte-9qt1ro">Sources</h2> ${n(_,"SchemaExplorer").$$render(s,{data:o},{},{})}`});export{ot as default};
