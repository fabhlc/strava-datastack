import{d as u}from"../../../chunks/index4.js";import{f as r}from"../../../chunks/index.js";import{logQueryEvent as d}from"@evidence-dev/telemetry";import{DatasourceSpecFileSchema as f,loadSourcePlugins as l,Options as m,writeSourceConfig as p}from"@evidence-dev/sdk/plugins";const w=async()=>({}),P={updateSource:async c=>{const s=Object.fromEntries(await c.request.formData()),t=s.source?JSON.parse(s.source):null;if(!t)return r(400,{message:"Missing required field 'source'"});const e=f.safeParse(t);if(!e.success)return r(400,e.error.format());const o=await l(),[,i]=o.getBySource(e.data.type),a=m(i.options,e.data.options);delete t.environmentVariables,delete t.initialName;try{return{updatedSource:await p(a,t)}}catch(n){return r(500,n.message)}},testSource:async c=>{const s=Object.fromEntries(await c.request.formData());if(!s?.source)return r(400,{message:"Missing required field 'source'"});const t=s.source?JSON.parse(s.source):null;if(!t)return r(400,{message:"Missing required field 'source'"});const e=f.safeParse(t);if(!e.success)return r(400,e.error.format());const o=await l(),[i,a]=o.getBySource(e.data.type);if(console.log(e,i,a,o),!a)return d("db-plugin-unvailable",e.data.type,void 0,void 0,u),r(400,{message:`Plugin for datasource "${e.data.type}" not found.`});const n=await a.testConnection(e.data.options,t.dir);return n!==!0?(d("db-connection-error",e.data.type,e.data.name,void 0,u),r(200,{message:n.reason})):(d("db-connection-success",e.data.type,e.data.name,void 0,u),{success:!0})}};export{P as actions,w as load};
