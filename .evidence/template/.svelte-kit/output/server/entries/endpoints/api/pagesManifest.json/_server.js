import{$ as c}from"../../../../chunks/index3.js";import{e as p}from"../../../../chunks/index.js";import f from"fs/promises";import o from"path";function d(i){const n={label:"Home",href:void 0,children:{},frontMatter:{},isTemplated:!1,isPage:!1};for(const[r,s]of Object.entries(i)){const e=r.replace("/src/pages/","");let t=n;for(const a of e.split("/"))if(a==="+page.md")e==="+page.md"?t.href="/":e.includes("[")||(t.href=encodeURI("/"+e.replace("/+page.md",""))),t.frontMatter=c.parseFrontmatter(s),t.isPage=!0;else{const l=a.includes("[")?void 0:a.replace(/_/g," ").replace(/-/g," ");t=t.children[a]=t.children[a]??{label:l,href:void 0,children:{},frontMatter:{},isTemplated:a.includes("["),isPage:!1}}}return n}const w=!0;async function b(){const i={};async function n(r){const s=await f.readdir(r,{withFileTypes:!0});for(const e of s)if(e.isFile()&&e.name.endsWith(".md")){const t=o.join(e.parentPath??e.path??r,e.name),a=await f.readFile(t,"utf-8");i[new URL(`file:///${t}`).pathname]=a}else e.isDirectory()&&await n(o.join(r,e.name))}try{await n(o.join("src","pages"));const r=d(i);return new Response(JSON.stringify(r))}catch(r){throw console.log("Failed to build pages manifest with error: ",r),p(500,"Failed to build pages manifest.")}}export{b as GET,d as _buildPageManifest,w as prerender};
