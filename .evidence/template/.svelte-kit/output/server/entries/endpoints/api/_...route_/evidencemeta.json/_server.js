import c from"fs/promises";import e from"path";import{$ as a}from"../../../../../chunks/index3.js";import{j as _}from"../../../../../chunks/index.js";const D="EVIDENCE_URL_PREFIX"in process.env?process.env.EVIDENCE_URL_PREFIX:"_evidence",p=process.cwd().includes(e.join(".evidence","template")),E=p?"..":".evidence";"EVIDENCE_DATA_DIR"in process.env&&process.env.EVIDENCE_DATA_DIR?e.resolve(process.env.EVIDENCE_DATA_DIR):e.resolve(E,"data");"EVIDENCE_DATA_URL_PREFIX"in process.env?process.env.EVIDENCE_DATA_URL_PREFIX:`${D}`;e.resolve(E,"meta");const l=e.resolve(...p?["..",".."]:[]);e.resolve(l,"sources");const u="EVIDENCE_PAGES_DIR"in process.env&&process.env.EVIDENCE_PAGES_DIR?e.resolve(process.env.EVIDENCE_PAGES_DIR):e.resolve(l,"pages");let d=!1;process.cwd().endsWith("sites/example-project")&&(d=!0);const A=!0,P=async()=>{const o=u;return(await c.readdir(o,{recursive:!0})).filter(s=>s.endsWith(".md")).map(s=>{const n=d?"/+page.md":".md";let r=s.slice(0,-n.length);return s.endsWith("index.md")&&(r=r.replaceAll(/\/?index/g,"")),{route:r}})};async function f({params:{route:o}}){let t;(await c.readdir(process.cwd())).includes("src")?t=e.join("src","pages"):t=e.join(".evidence","template","src","pages");const i=e.join(process.cwd(),t,o,"+page.md"),s=await c.readFile(i,"utf8"),n=a.injectPartials(s),r=a.extractQueries(n);return _({queries:r})}export{f as GET,P as entries,A as prerender};
